@using Microsoft.AspNetCore.Identity
@using SimpleSocialApp.Data.Enums
@using SimpleSocialApp.Data.Models
@using SimpleSocialApp.Models.ViewModels.Chats
@using System.Security.Claims

@inject UserManager<AppUser> _userManager;

@model ChatViewModel
@{
    var currentUser = _userManager.GetUserAsync(User).Result;
}

<div class="chat-wrapper">
    <div class="chat-container">
        <!-- Fixed Buttons at the Top -->
        <div class="chat-headerr">
            <div class="chat-header-left">
                @if (Model.Type == ChatType.Group)
                {
                    <h2>@Model.Title</h2>
                }
                else
                {
                    <div class="d-flex">
                        <img src="@(!string.IsNullOrEmpty(Model.Friend.Media?.Url) ? @Model.Friend.Media?.Url : "/images/profile_default/default_avatar.jpg")"
                             alt="friend_profile_picture"/>
                        <h2>@Model.Friend.FirstName @Model.Friend.LastName</h2>
                    </div>
                }
            </div>


            <!-- Chat Management Buttons (Each in its own div) -->
            <div class="button-container">
                @if (Model.OwnerId == currentUser.Id)
                {
                    <div class="button-wrapper">
                        <form asp-controller="Chat" asp-action="DeleteChat" method="post">
                            <input type="hidden" name="chatId" value="@Model.ChatId" />
                            <button type="submit" class="chat-action-button">Delete Chat</button>
                        </form>
                    </div>

                    <div class="button-wrapper">
                        <form asp-controller="Chat" asp-action="ModifyUsers" method="get">
                            <input type="hidden" name="chatId" value="@Model.ChatId" />
                            <input type="hidden" name="userId" value="@currentUser.Id" />
                            <input type="hidden" name="actionType" value="Add" />
                            <button type="submit" class="chat-action-button">Add Friend</button>
                        </form>
                    </div>

                    <div class="button-wrapper">
                        <form asp-controller="Chat" asp-action="ModifyUsers" method="get">
                            <input type="hidden" name="chatId" value="@Model.ChatId" />
                            <input type="hidden" name="userId" value="@currentUser.Id" />
                            <input type="hidden" name="actionType" value="Remove" />
                            <button type="submit" class="chat-action-button">Remove Friend</button>
                        </form>
                    </div>
                }
                <div class="button-wrapper">
                    <form asp-controller="Chat" asp-action="LeaveChat" method="post">
                        <input type="hidden" name="chatId" value="@Model.ChatId" />
                        <button type="submit" class="chat-action-button">Leave Chat</button>
                    </form>
                </div>
            </div>

            <div class="more-options">
                <button id="moreOptionsBtn" class="chat-action-button-options">...</button>
            </div>

        </div>

        <input type="hidden" id="ChatId" value="@Model.ChatId" />
        <input type="hidden" id="isGroupChat" value="@(@Model.Type == ChatType.Group ? "true" : "false")" />
                   
        <!-- Chat Messages Container with Scrollbar -->
        <div id="chatBox" class="chat-box">     
         @*    i need them here *@
            <div id="messagesContainer">
                @await Html.PartialAsync("Message/_MessagesPartial", Model)
            </div>
           @*  they appear here *@
            <div id="load-more-trigger" style="height: 1px; visibility: hidden;"
                 data-url="@Url.Action("Chat", "Index")">
            </div>
        </div>

        <!-- Fixed Message Input at the Bottom -->
        <div id="messageInputArea" class="message-container">
            <form id="messageForm">
                <div class="message-box-container">
                    <textarea id="messageInput" rows="3" placeholder="Type a new message..."></textarea>
                    <button id="submitButton" type="submit">Send</button>
                </div>
                <input type="hidden" id="chatId" value="@Model.ChatId" />
            </form>
        </div>
    </div>
</div>

<script src="~/js/chat.js"></script> 
<script src="~/js/message-loader.js"></script>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
